{
    "collab_server" : "",
    "contents" : "library(plotly)\n\nsource(\"api.R\")\n\nshinyServer(function(input, output, session) {\n\n  output$amountOfFootsteps <- renderPlotly({\n    plot_ly(player_data,\n            x = player_data$player_name,\n            y = player_data$num_footsteps_per_player,\n            type = \"bar\")\n  })\n\n  output$amountOfFootstepsTable <- renderUI({\n    tags$table(class = \"table\",\n               tags$thead(tags$tr(\n                 tags$th(\"Color\"),\n                 tags$th(\"ID\"),\n                 tags$th(\"Name\"),\n                 tags$th(\"Number of Footsteps\")\n               )),\n               tags$tbody(tags$tr(\n                 tags$td(span(\n                   style = sprintf(\n                     \"width:1.1em; height:1.1em; background-color:%s; display:inline-block;\",\n                     \"#1F78B4\"\n                   )\n                 )),\n                 tags$td(player_data$players.id),\n                 tags$td(player_data$player_name),\n                 tags$td(player_data$num_footsteps_per_player)\n               )))\n  })\n  \n  output$averageSpeed <- renderPlotly({\n    plot_ly(player_data,\n            x = player_data$player_name,\n            y = player_data$average_speed_per_player,\n            type = \"bar\")\n  })\n  \n  output$averageSpeedTable <- renderUI({\n    tags$table(class = \"table\",\n               tags$thead(tags$tr(\n                 tags$th(\"Color\"),\n                 tags$th(\"ID\"),\n                 tags$th(\"Name\"),\n                 tags$th(\"Average Speed\")\n               )),\n               tags$tbody(tags$tr(\n                 tags$td(span(\n                   style = sprintf(\n                     \"width:1.1em; height:1.1em; background-color:%s; display:inline-block;\",\n                     \"#1F78B4\"\n                   )\n                 )),\n                 tags$td(player_data$players.id),\n                 tags$td(player_data$player_name),\n                 tags$td(player_data$average_speed_per_player)\n               )))\n  })\n  \n  output$totalDistance <- renderPlotly({\n    plot_ly(player_data,\n            x = player_data$player_name,\n            y = player_data$distance_per_player,\n            type = \"bar\")\n  })\n  \n  output$totalDistanceTable <- renderUI({\n    tags$table(class = \"table\",\n               tags$thead(tags$tr(\n                 tags$th(\"Color\"),\n                 tags$th(\"ID\"),\n                 tags$th(\"Name\"),\n                 tags$th(\"Total distance\")\n               )),\n               tags$tbody(tags$tr(\n                 tags$td(span(\n                   style = sprintf(\n                     \"width:1.1em; height:1.1em; background-color:%s; display:inline-block;\",\n                     \"#1F78B4\"\n                   )\n                 )),\n                 tags$td(player_data$players.id),\n                 tags$td(player_data$player_name),\n                 tags$td(player_data$distance_per_player)\n               )))\n  })\n  \n  output$positions <- renderPlotly({\n    plot_ly(\n      positions,\n      x = positions$x,\n      y = positions$y,\n      type = \"scatter\",\n      mode = 'markers'\n    )\n  })\n  \n  output$heatmap <- renderPlotly({\n    plot_ly(\n      x = max(positions$x) - 1.5,\n      y = max(positions$y) - 1.5,\n      z = floor,\n      type = \"heatmap\"\n    )\n  })\n  \n  output$perspective <- renderPlot({\n    persp(floor, expand = 0.2)\n  })\n  \n  output$table <- renderDataTable({\n    player_data\n  })\n  \n  observeEvent(input$loadfloor, {\n    \n    ss = NEWsessionsDF[NEWsessionsDF$Floor == input$floors,]\n    \n    filename <- paste(\"sessions/sessions_of_floor_\", trimws(input$floors),\".Rda\", sep = \"\");\n    \n    sessions <- readRDS(file=filename);\n    \n    updateSelectInput(session, \"sessions\", choices =  ss$Session)\n  })\n  \n  observeEvent(input$loadSession, {\n    \n    #url <- paste(\"http://track.smartfloor.com/api/footstep/session/\",\n    #            input$sessions, sep = \"\");\n    #session  <- fromJSON(url);\n\n    ReturnedObject <- refresh(input$sessions)\n    \n    positions = ReturnedObject$positions\n    player_data = ReturnedObject$player_data\n    floor = ReturnedObject$floor\n    \n    #positions <- data.frame(session$position, session$user)\n\n    output$amountOfFootsteps <- renderPlotly({\n      plot_ly(player_data,\n              x = player_data$player_name,\n              y = player_data$num_footsteps_per_player,\n              type = \"bar\")\n    })\n    \n    output$amountOfFootstepsTable <- renderUI({\n      tags$table(class = \"table\",\n                 tags$thead(tags$tr(\n                   tags$th(\"Color\"),\n                   tags$th(\"ID\"),\n                   tags$th(\"Name\"),\n                   tags$th(\"Number of Footsteps\")\n                 )),\n                 tags$tbody(tags$tr(\n                   tags$td(span(\n                     style = sprintf(\n                       \"width:1.1em; height:1.1em; background-color:%s; display:inline-block;\",\n                       \"#1F78B4\"\n                     )\n                   )),\n                   tags$td(player_data$players.id),\n                   tags$td(player_data$player_name),\n                   tags$td(player_data$num_footsteps_per_player)\n                 )))\n    })\n    \n    output$averageSpeed <- renderPlotly({\n      plot_ly(player_data,\n              x = player_data$player_name,\n              y = player_data$average_speed_per_player,\n              type = \"bar\")\n    })\n    \n    output$averageSpeedTable <- renderUI({\n      tags$table(class = \"table\",\n                 tags$thead(tags$tr(\n                   tags$th(\"Color\"),\n                   tags$th(\"ID\"),\n                   tags$th(\"Name\"),\n                   tags$th(\"Average Speed\")\n                 )),\n                 tags$tbody(tags$tr(\n                   tags$td(span(\n                     style = sprintf(\n                       \"width:1.1em; height:1.1em; background-color:%s; display:inline-block;\",\n                       \"#1F78B4\"\n                     )\n                   )),\n                   tags$td(player_data$players.id),\n                   tags$td(player_data$player_name),\n                   tags$td(player_data$average_speed_per_player)\n                 )))\n    })\n    \n    output$totalDistance <- renderPlotly({\n      plot_ly(player_data,\n              x = player_data$player_name,\n              y = player_data$distance_per_player,\n              type = \"bar\")\n    })\n    \n    output$totalDistanceTable <- renderUI({\n      tags$table(class = \"table\",\n                 tags$thead(tags$tr(\n                   tags$th(\"Color\"),\n                   tags$th(\"ID\"),\n                   tags$th(\"Name\"),\n                   tags$th(\"Total distance\")\n                 )),\n                 tags$tbody(tags$tr(\n                   tags$td(span(\n                     style = sprintf(\n                       \"width:1.1em; height:1.1em; background-color:%s; display:inline-block;\",\n                       \"#1F78B4\"\n                     )\n                   )),\n                   tags$td(player_data$players.id),\n                   tags$td(player_data$player_name),\n                   tags$td(player_data$distance_per_player)\n                 )))\n    })\n    \n    output$positions <- renderPlotly({\n      plot_ly(\n        positions,\n        x = positions$x,\n        y = positions$y,\n        type = \"scatter\",\n        mode = 'markers'\n      )\n    })\n    \n    output$heatmap <- renderPlotly({\n      plot_ly(\n        x = max(positions$x) - 1.5,\n        y = max(positions$y) - 1.5,\n        z = floor,\n        type = \"heatmap\"\n      )\n    })\n    \n    output$perspective <- renderPlot({\n      persp(floor, expand = 0.2)\n    })\n    \n    output$table <- renderDataTable({\n      player_data\n    })\n    \n    \n  })\n\n})",
    "created" : 1497342503938.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2225403944",
    "id" : "17EC65A6",
    "lastKnownWriteTime" : 1497342427,
    "last_content_update" : 1497342427,
    "path" : "F:/ZBIM/Big Data/Data processing/Smartfloors/git repo/SmartFloorE/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}